<?xml version='1.0' encoding='utf-8'?>
<feed xmlns='http://www.w3.org/2005/Atom'>
  <title>spencertipping's blog</title>
  <link href='http://spencertipping.com/feed.atom' rel='self'/>
  <link href='http://spencertipping.com/'/>
  <id>http://spencertipping.com/</id>
  <updated>2013-07-13T11:32:59Z</updated>

  <entry>
<title>compressing-the-requirements</title>
<link href='http://spencertipping.com/posts/2013.0713.compressing-the-requirements.html'/>
<id>http://spencertipping.com/posts/2013.0713.compressing-the-requirements.html</id>
<updated>2013-07-13T00:00:00Z</updated>
<summary>Compressing the requirements.
It's taken a while, but I've finally come up with a counterargument (by
technological analogy) to my previously-held belief that a more powerful
language would make me a ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>why-caterwaul-sucks</title>
<link href='http://spencertipping.com/posts/2013.0327.why-caterwaul-sucks.html'/>
<id>http://spencertipping.com/posts/2013.0327.why-caterwaul-sucks.html</id>
<updated>2013-03-27T00:00:00Z</updated>
<summary>Why Caterwaul sucks.
In case you haven't heard of Caterwaul
(you probably haven't), it's an experimental programming language I wrote that
does some very awesome stuff. I've used it productively for o...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>selling-go</title>
<link href='http://spencertipping.com/posts/2012.1201.selling-go.html'/>
<id>http://spencertipping.com/posts/2012.1201.selling-go.html</id>
<updated>2012-12-01T00:00:00Z</updated>
<summary>Selling Go.
A couple of days ago Tibor on the Go user group thread posted a question that I thought was
really interesting. Quoting directly from his message:

Many people just flip through the pages ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>an-apology</title>
<link href='http://spencertipping.com/posts/2012.1129.an-apology.html'/>
<id>http://spencertipping.com/posts/2012.1129.an-apology.html</id>
<updated>2012-11-29T00:00:00Z</updated>
<summary>An apology.
About six months ago I wrote a now-infamous
post about why I left Google. I still stand behind most of what I wrote,
but after thinking about it I need to address one point in particular: ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>clojure-metadata</title>
<link href='http://spencertipping.com/posts/2012.0819.clojure-metadata.html'/>
<id>http://spencertipping.com/posts/2012.0819.clojure-metadata.html</id>
<updated>2012-08-19T00:00:00Z</updated>
<summary>Clojure metadata.
I've finally gotten around to learning Clojure, and I have to say it's an
impressive and very usable piece of technology. At first I was worried that it
was a hack to get Common Lisp...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>text-mode-is-awesome</title>
<link href='http://spencertipping.com/posts/2012.0620.text-mode-is-awesome.html'/>
<id>http://spencertipping.com/posts/2012.0620.text-mode-is-awesome.html</id>
<updated>2012-06-20T00:00:00Z</updated>
<summary>Text-mode is awesome.
I recently tweeted that (text : GUI) :: (FP : OOP), and that Vim was a WYSIWYG
version of Ed. I've been thinking a lot about how UIs are structured, more
computationally than vis...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>how-modus-works</title>
<link href='http://spencertipping.com/posts/2012.0611.how-modus-works.html'/>
<id>http://spencertipping.com/posts/2012.0611.how-modus-works.html</id>
<updated>2012-06-11T00:00:00Z</updated>
<summary>How Modus works.
Modus is a project I started a while ago and have largely left unmaintained. The idea was to let you use jQuery in
higher-order ways on lists or other structures of components. The ca...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-user-is-a-thread</title>
<link href='http://spencertipping.com/posts/2012.0610.the-user-is-a-thread.html'/>
<id>http://spencertipping.com/posts/2012.0610.the-user-is-a-thread.html</id>
<updated>2012-06-10T00:00:00Z</updated>
<summary>The user is a thread.
Any user-facing program is by its nature multithreaded. The semantics aren't the usual ones, however. Things that happen within 30ms or so are atomic, since that's below the user...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-market-inefficiency-factor</title>
<link href='http://spencertipping.com/posts/2012.0601.the-market-inefficiency-factor.html'/>
<id>http://spencertipping.com/posts/2012.0601.the-market-inefficiency-factor.html</id>
<updated>2012-06-01T00:00:00Z</updated>
<summary>The market inefficiency factor.
I was talking to a friend recently about the role of online advertising in market efficiency. On the one hand, it gives information to consumers and thus allows them to...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>an-open-source-life</title>
<link href='http://spencertipping.com/posts/2012.0601.an-open-source-life.html'/>
<id>http://spencertipping.com/posts/2012.0601.an-open-source-life.html</id>
<updated>2012-06-01T00:00:00Z</updated>
<summary>An open-source life.
Wouldn't it be cool to be able to publish the "source code" of your life? From the outside, someone else's life choices are about as opaque as someone else's web server code. Nobo...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>why-i-left-google</title>
<link href='http://spencertipping.com/posts/2012.0530.why-i-left-google.html'/>
<id>http://spencertipping.com/posts/2012.0530.why-i-left-google.html</id>
<updated>2012-05-30T00:00:00Z</updated>
<summary>Why I left Google.
This post is getting a lot more attention than I expected or hoped. I wrote it mostly for family and friends who know me well and who might be curious about it. So I need to address...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>developer-machines-should-suck</title>
<link href='http://spencertipping.com/posts/2012.0527.developer-machines-should-suck.html'/>
<id>http://spencertipping.com/posts/2012.0527.developer-machines-should-suck.html</id>
<updated>2012-05-27T00:00:00Z</updated>
<summary>Developer machines should suck.
I've been using an underpowered netbook for software development for the past four years, and it's one of the best things I've ever decided to do. The main reason is th...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>flat-mapping-function-arguments</title>
<link href='http://spencertipping.com/posts/2012.0522.flat-mapping-function-arguments.html'/>
<id>http://spencertipping.com/posts/2012.0522.flat-mapping-function-arguments.html</id>
<updated>2012-05-22T00:00:00Z</updated>
<summary>Flat-mapping function arguments.
I've been getting back into concatenative programming recently. One of the coolest things about it is the fact that you can erase values completely. Here's what I mean...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>selection-bias-in-new-technologies</title>
<link href='http://spencertipping.com/posts/2012.0513.selection-bias-in-new-technologies.html'/>
<id>http://spencertipping.com/posts/2012.0513.selection-bias-in-new-technologies.html</id>
<updated>2012-05-13T00:00:00Z</updated>
<summary>Selection bias in new technologies.
Each new thing that comes out seems to improve the state of technology. OOP "conquered complexity", FP "conquered buggy state", etc. Yet once enough people adopt a ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-programming-language-quiz</title>
<link href='http://spencertipping.com/posts/2012.0508.the-programming-language-quiz.html'/>
<id>http://spencertipping.com/posts/2012.0508.the-programming-language-quiz.html</id>
<updated>2012-05-08T00:00:00Z</updated>
<summary>The programming language quiz.
I've just written an impeccable measuring tool for useless knowledge. The programming language quiz.
...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>goto-isnt-evil</title>
<link href='http://spencertipping.com/posts/2012.0416.goto-isnt-evil.html'/>
<id>http://spencertipping.com/posts/2012.0416.goto-isnt-evil.html</id>
<updated>2012-04-16T00:00:00Z</updated>
<summary>Goto isn't evil.
Constructs which are easy to misuse are branded as evil, despite the fact that using them is generally a conscious decision. goto is the canonical example of this. Mutability is
anoth...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-box-problem</title>
<link href='http://spencertipping.com/posts/2012.0411.the-box-problem.html'/>
<id>http://spencertipping.com/posts/2012.0411.the-box-problem.html</id>
<updated>2012-04-11T00:00:00Z</updated>
<summary>The box problem.
It can be argued that Java and C++ have roughly comparable performance for
CPU-bound tasks. Yet Java is justifiably considered to be a much slower language than C++. What gives?

Most...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>zero-risk-consulting</title>
<link href='http://spencertipping.com/posts/2012.0403.zero-risk-consulting.html'/>
<id>http://spencertipping.com/posts/2012.0403.zero-risk-consulting.html</id>
<updated>2012-04-03T00:00:00Z</updated>
<summary>Zero-risk consulting.
I'm going to try something new. I have no idea how it will turn out. It occurs to me that there's probably a lot of risk associated with hiring people in various capacities: Full...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>why-microbenchmarks-are-misleading</title>
<link href='http://spencertipping.com/posts/2012.0401.why-microbenchmarks-are-misleading.html'/>
<id>http://spencertipping.com/posts/2012.0401.why-microbenchmarks-are-misleading.html</id>
<updated>2012-04-01T00:00:00Z</updated>
<summary>Why microbenchmarks are misleading.
The Great Programming Language Shootout contains a fairly prominent disclaimer that microbenchmarks are not an accurate measure
of real-world performance. The first...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>pure-functions-dont-exist</title>
<link href='http://spencertipping.com/posts/2012.0327.pure-functions-dont-exist.html'/>
<id>http://spencertipping.com/posts/2012.0327.pure-functions-dont-exist.html</id>
<updated>2012-03-27T00:00:00Z</updated>
<summary>Pure functions don't exist.
State is evil. Such is what we are led to believe by functional programming devotees who justifiably value purity in code. And it continues: referential transparency is cru...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>solving-the-wrong-problem</title>
<link href='http://spencertipping.com/posts/2012.0323.solving-the-wrong-problem.html'/>
<id>http://spencertipping.com/posts/2012.0323.solving-the-wrong-problem.html</id>
<updated>2012-03-23T00:00:00Z</updated>
<summary>Solving the wrong problem?.
Source code is represented as text. On the face of it, this is a strange format to use; it requires complex parsing algorithms, makes it easy to write nonsensical statement...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-value-of-heuristics</title>
<link href='http://spencertipping.com/posts/2012.0319.the-value-of-heuristics.html'/>
<id>http://spencertipping.com/posts/2012.0319.the-value-of-heuristics.html</id>
<updated>2012-03-19T00:00:00Z</updated>
<summary>The value of heuristics.
Some problems don't have clean, elegant solutions. One example of this is object traversal in Javascript. I was working on a serialization library that crawled through a serie...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>too-little-structure</title>
<link href='http://spencertipping.com/posts/2012.0315.too-little-structure.html'/>
<id>http://spencertipping.com/posts/2012.0315.too-little-structure.html</id>
<updated>2012-03-15T00:00:00Z</updated>
<summary>Too little structure.
Caterwaul's parser and syntax trees are much looser than the Javascript language specification. I did this mostly out of laziness; it seemed simpler to write an ad-hoc parser and...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>type-theory-considered-distracting</title>
<link href='http://spencertipping.com/posts/2012.0312.type-theory-considered-distracting.html'/>
<id>http://spencertipping.com/posts/2012.0312.type-theory-considered-distracting.html</id>
<updated>2012-03-12T00:00:00Z</updated>
<summary>Type theory considered distracting.
Assembly language is untyped. By the time you're writing assembly programs, all types have been erased into instruction patterns that happen to reflect the semantic...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>becoming-a-dad</title>
<link href='http://spencertipping.com/posts/2012.0310.becoming-a-dad.html'/>
<id>http://spencertipping.com/posts/2012.0310.becoming-a-dad.html</id>
<updated>2012-03-10T00:00:00Z</updated>
<summary>Becoming a dad.
Adam Tipping was born two days ago at about 8 in the morning. He's our first, so Joyce and I went
from a low-maintenance child-free existence to something totally different. I haven't ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>developing-without-unit-tests</title>
<link href='http://spencertipping.com/posts/2012.0307.developing-without-unit-tests.html'/>
<id>http://spencertipping.com/posts/2012.0307.developing-without-unit-tests.html</id>
<updated>2012-03-07T00:00:00Z</updated>
<summary>Developing without unit tests.
About a year ago I removed caterwaul's unit tests. Now it has only a large functional test: can it bootstrap-compile itself? I think the change has been really good for ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>a-caterwaul-bug</title>
<link href='http://spencertipping.com/posts/2012.0302.a-caterwaul-bug.html'/>
<id>http://spencertipping.com/posts/2012.0302.a-caterwaul-bug.html</id>
<updated>2012-03-02T00:00:00Z</updated>
<summary>A Caterwaul bug.
Not all bugs are created equal. They range from the stupidly obvious mistakes of late-night coding to the intriguingly subtle nonlocal consequences of reasonable design decisions. In ...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>performance-as-a-side-effect</title>
<link href='http://spencertipping.com/posts/2012.0229.performance-as-a-side-effect.html'/>
<id>http://spencertipping.com/posts/2012.0229.performance-as-a-side-effect.html</id>
<updated>2012-02-29T00:00:00Z</updated>
<summary>Performance as a side effect.
Someone on Twitter posed a good question recently: "What is state?" (that is, statefulness vs statelessness in code). I thought about that for a while. It's a difficult t...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>indirect-jumps-in-gnu-assembler</title>
<link href='http://spencertipping.com/posts/2012.0226.indirect-jumps-in-gnu-assembler.html'/>
<id>http://spencertipping.com/posts/2012.0226.indirect-jumps-in-gnu-assembler.html</id>
<updated>2012-02-26T00:00:00Z</updated>
<summary>Indirect jumps in GNU assembler.
I'm not great at assembly-level programming, but I've been getting into it recently to implement a new programming language that I'll probably never finish. While work...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>the-wrong-tool</title>
<link href='http://spencertipping.com/posts/2012.0222.the-wrong-tool.html'/>
<id>http://spencertipping.com/posts/2012.0222.the-wrong-tool.html</id>
<updated>2012-02-22T00:00:00Z</updated>
<summary>The wrong tool.
As a programmer who likes functional paradigms, I have a hard time accepting the fact that Java is so popular. But it is, and so much so that it's noteworthy. Great software is built i...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>perfection-is-irrecoverable</title>
<link href='http://spencertipping.com/posts/2012.0222.perfection-is-irrecoverable.html'/>
<id>http://spencertipping.com/posts/2012.0222.perfection-is-irrecoverable.html</id>
<updated>2012-02-22T00:00:00Z</updated>
<summary>Perfection is irrecoverable.
Haskell emulates something close to perfection on an imperfect platform. Rather than embracing the platform's idiosyncrasies and imperfections, it attempts to create a wor...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>syntax-as-a-constraint</title>
<link href='http://spencertipping.com/posts/2012.0217.syntax-as-a-constraint.html'/>
<id>http://spencertipping.com/posts/2012.0217.syntax-as-a-constraint.html</id>
<updated>2012-02-17T00:00:00Z</updated>
<summary>Syntax as a constraint.
Someone at some point said something like "constraints breed creativity." It's an interesting thing to say considering that constraints also limit your options. But sometimes t...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>software-reliability</title>
<link href='http://spencertipping.com/posts/2012.0215.software-reliability.html'/>
<id>http://spencertipping.com/posts/2012.0215.software-reliability.html</id>
<updated>2012-02-15T00:00:00Z</updated>
<summary>Software reliability.
When I was working for startups, it seemed like something was always burning down. The database would spontaneously become read-only, the middleware would sponataneously fail, or...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>not-invented-here</title>
<link href='http://spencertipping.com/posts/2012.0209.not-invented-here.html'/>
<id>http://spencertipping.com/posts/2012.0209.not-invented-here.html</id>
<updated>2012-02-09T00:00:00Z</updated>
<summary>Not invented here.
I have a terrible case of NIH. This means I reimplement stuff that other people have written because I think I can do a better job (or based on other shaky reasoning). It does end s...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>occams-razor</title>
<link href='http://spencertipping.com/posts/2012.0207.occams-razor.html'/>
<id>http://spencertipping.com/posts/2012.0207.occams-razor.html</id>
<updated>2012-02-07T00:00:00Z</updated>
<summary>Occam's Razor.
In real life, true facts are often both counterintuitive and simplifying. Finding out that the earth is round is a significant mental leap considering that it looks flat from every angl...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>

 <entry>
<title>great-abstractions</title>
<link href='http://spencertipping.com/posts/2012.0205.great-abstractions.html'/>
<id>http://spencertipping.com/posts/2012.0205.great-abstractions.html</id>
<updated>2012-02-05T00:00:00Z</updated>
<summary>Great abstractions.
jQuery didn't take long to become the dominant Javascript library, and it's easy to see why. For someone who already knows DOM programming, it's trivial to learn and provides great...</summary>
<author><name>Spencer Tipping</name><email>spencer@spencertipping.com</email></author>
</entry>


</feed>
